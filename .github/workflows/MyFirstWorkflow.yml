name: Enhanced Workflow

# This workflow demonstrates various GitHub Actions features
# It runs on push to main branch or can be manually triggered

on:
  push:
    branches: 
        - main
    paths-ignore:
        - '**.md'  # Ignore changes to Markdown files
  workflow_dispatch:
    inputs:
      homedrive:
        description: "Home Drive"
        required: true
      loglevel:
        description: "Log Level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      tag:
        description: "Apply tag after successful run"
        type: boolean
        required: true
        default: false
      env:
        description: "Environment to run tests against"
        required: true
        type: environment
jobs:
  # Set up the environment and initial checks
  setup:
    name: Setup and Initial Checks
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.set-outputs.outputs.run_id }}
      timestamp: ${{ steps.set-outputs.outputs.timestamp }}
    steps:
      - name: Initial greeting
        run: echo "🚀 Starting workflow execution!"

      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1  # Shallow clone for faster checkout

      - name: List files in repository
        run: |
          echo "📂 The repository ${{ github.repository }} contains the following files:"
          tree

      - name: Display workflow inputs
        run: |
           echo "📋 Workflow Inputs:"
           echo "  - Homedrive: ${{ inputs.homedrive }}"
           echo "  - Log level: ${{ inputs.loglevel }}"
           echo "  - Tag source: ${{ inputs.tag }}"
           echo "  - Environment: ${{ inputs.env }}"
        if: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Set outputs for downstream jobs
        id: set-outputs
        run: |
          echo "run_id=$(date +%s)" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

  # Secondary processing jobs
  process_data:
    name: Process Data
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Display job information
        run: |
          echo "📊 Processing data in job: ${{ github.job }}"
          echo "Run ID from setup: ${{ needs.setup.outputs.run_id }}"
          echo "Timestamp: ${{ needs.setup.outputs.timestamp }}"

      - name: Simulate data processing
        run: |
          echo "Processing started at $(date)"
          sleep 2  # Simulate work
          echo "Processing completed successfully"

  run_tests:
    name: Run Tests
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Display job information
        run: |
          echo "🧪 Running tests in job: ${{ github.job }}"
          echo "Run ID from setup: ${{ needs.setup.outputs.run_id }}"

      - name: Simulate test execution
        run: |
          echo "Test execution started"
          # Simulate test results
          echo "All tests passed successfully"

  generate_report:
    name: Generate Report
    needs: [process_data, run_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Display job information
        run: |
          echo "📝 Generating report in job: ${{ github.job }}"

      - name: Create summary report
        run: |
          echo "### Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Run ID: ${{ needs.setup.outputs.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "* Timestamp: ${{ needs.setup.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ✅ Completed" >> $GITHUB_STEP_SUMMARY
  # Matrix job to test across multiple environments
  cross_platform_tests:
    name: Node.js ${{ matrix.node_version }} on ${{ matrix.os_version }}
    needs: [generate_report]
    strategy:
      fail-fast: false  # Continue with other matrix jobs even if one fails
      max-parallel: 3
      matrix:
        os_version: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [16, 18, 20]  # Updated to more current Node.js versions
    runs-on: ${{ matrix.os_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'npm'  # Enable npm caching for better performance

      - name: Display Node.js version
        run: node --version

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci

      - name: Run tests
        run: |
          echo "Running tests on ${{ matrix.os_version }} with Node.js ${{ matrix.node_version }}"
          npm test

      - name: Report status
        if: always()  # Run even if previous steps fail
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Tests passed on ${{ matrix.os_version }} with Node.js ${{ matrix.node_version }}"
          else
            echo "❌ Tests failed on ${{ matrix.os_version }} with Node.js ${{ matrix.node_version }}"
          fi
        shell: bash

  # Final notification job
  notify:
    name: Send Notifications
    if: always()  # Run even if previous jobs fail
    needs: [cross_platform_tests, setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for tagging
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tag == true }}
        uses: actions/checkout@v4.2.2

      - name: Create tag
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tag == true }}
        run: |
          TAG_NAME="run-${{ needs.setup.outputs.run_id }}"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "$TAG_NAME" -m "Automated tag from workflow run ${{ github.run_id }}"
          git push origin "$TAG_NAME"
          echo "Created and pushed tag: $TAG_NAME"

      - name: Workflow status notification
        run: |
          echo "### 📢 Workflow Completed" >> $GITHUB_STEP_SUMMARY
          echo "* Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "* Workflow: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "* Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "* Triggered by: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

      # Uncomment and customize to send notifications via email, Slack, etc.
      # - name: Send Slack notification
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: 'CHANNEL_ID'
      #     slack-message: "Workflow ${{ github.workflow }} completed with status: ${{ job.status }}"
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

# Enhanced workflow features:
# - Better organization with descriptive job names and dependencies
# - Improved documentation with comments and emojis
# - Added caching for better performance
# - Added error handling and status reporting
# - Added notifications and tagging capability
# - Support for multiple platforms and Node.js versions
